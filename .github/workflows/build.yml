name: Build

on:
    push:
        branches: [master]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: 'pnpm'

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v3
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install

            - name: Build project
              run: pnpm run build

            - name: Extract version and git hash
              id: vars
              shell: bash
              run: |
                  # 从 package.json 获取版本号
                  VERSION=$(node -p "require('./package.json').version")
                  echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

                  # 获取 Git 短哈希
                  GIT_HASH=$(git rev-parse --short HEAD)
                  echo "GIT_HASH=$GIT_HASH" >> $GITHUB_OUTPUT

                  # 组合文件名
                  FILENAME="DPlayer-$VERSION#$GIT_HASH"
                  echo "FILENAME=$FILENAME" >> $GITHUB_OUTPUT

            - name: Create ZIP archive
              run: |
                  cd dist
                  zip -r ../${{ steps.vars.outputs.FILENAME }}.zip .

            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ steps.vars.outputs.FILENAME }}
                  path: ${{ steps.vars.outputs.FILENAME }}.zip
